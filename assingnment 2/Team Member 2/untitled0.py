# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13EdhjvsA-olEYmGn7zw_EB9EU05X8WSJ

1.Download the dataset
"""

from google.colab import files
Uploaded=files.upload()

"""2.Load the dataset into the tool"""

df=pd.read_csv("/content/abalone.csv")
print(df)

df.info()

df.describe()

import matplotlib.pyplot as plt
import seaborn as sns
import math

df.isna().sum()

df.isnull().sum()

"""3.Perform below Visualizations.
Univariate Analysis
"""

sns.histplot(df.Diameter,kde=True)

"""Bi-Variate Analysis"""

sns.scatterplot(df.Length,df.Diameter)
plt.ylim(0,15000)

"""Multi-Variate Analysis"""

df=pd.read_csv("/content/abalone.csv")
sns.pairplot(df)

"""4.Perform descriptive statistics on the dataset"""

df=pd.read_csv("/content/abalone.csv")
df.describe(include='all')

"""5.Check for Missing values and Deal with them"""

# Commented out IPython magic to ensure Python compatibility.
from ast import increment_lineno
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline 
sns.set(color_codes=True)
df=pd.read_csv("/content/abalone.csv")
df.head()

"""6.Find the Outliers and Replace with them"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib
from matplotlib import pyplot as pyplot
# %matplotlib inline
matplotlib.rcParams['figure.figsize']=(10,6)
df=pd.read_csv("/content/abalone.csv")
df.sample(5)

"""7.Check Categorical Columns and perform encoding"""

df=pd.read_csv("/content/abalone.csv")
df.columns
import pandas as pd
import numpy as np
headers=['Sex','Length','Diameter','Height','Whole weight','Shucked weight','Viscera weight','Shell weight','Rings']
df=pd.read_csv("/content/abalone.csv",header=None,names=headers,na_values="?")
df.head()

"""8.Split the Data into dependent and independent variables"""

x=df.iloc[:,:-1].values
print(x)
y=df.iloc[:,-1].values
print(y)

"""9.Scale the independent variables"""

import seaborn as sns
df=pd.read_csv("/content/abalone.csv")
dff=df[['Shell weight','Diameter']]
sns.heatmap(dff.corr(),annot=True)
sns.set(rc={'figure.figsize':(40,40)})

"""10.Split data into Training and Testing"""

x=df.iloc[:,1:2].values
y=df.iloc[:,2].values
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)
print('Row count of x_train table'+'-'+str(f"{len(x_train):,}"))
print('Row count of y_train table'+'-'+str(f"{len(y_train):,}"))
print('Row count of x_test table'+'-'+str(f"{len(x_test):,}"))
print('Row count of y_test table'+'-'+str(f"{len(y_test):,}"))

"""11.Build the Model"""

import pandas as pd
data=pd.read_csv('/content/abalone.csv')
data.head()

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.tree import DecisionTreeClassifier
from sklearn import metrics
from sklearn import svm

var=sns.heatmap(data.corr(),annot=True)
plt.show()

"""12.Train the model"""

X=data.iloc[:,:-1]
y=data['Diameter']

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)

print(X_train)

print(y_train)

"""13.Test the model"""

print(X_test)

print(y_test)

"""14.Measure the performance using Metrics"""

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.tree import DecisionTreeClassifier
from sklearn import metrics
from sklearn import svm

model=svm.SVC(kernel='linear')

X=data.iloc[:,:-1]
y=data['Diameter']

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)

print(X_test)

print(y_test)